{"version":3,"sources":["./src/app/pages/profile/profile-routing.module.ts","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/profile/profile.module.ts","./src/app/shared/providers/form-helper.service.ts","./src/app/shared/providers/toaster.service.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/user.service.ts"],"names":[],"mappings":"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","file":"pages-profile-profile-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule {}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from \"@angular/forms\";\nimport { UtilsService } from \"../../shared/providers/utils.service\";\nimport { ToasterService } from \"../../shared/providers/toaster.service\";\nimport { FormHelperService } from \"../../shared/providers/form-helper.service\";\nimport { SessionService } from \"../../shared/providers/session.service\";\nimport { User } from '../../shared/models/user.model';\nimport { UserService } from '../../shared/services/user.service';\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"]\n})\nexport class ProfileComponent implements OnInit {\n  isLoading: boolean;\n  data: User = new User();\n  form: FormGroup;\n  id: string;\n  constructor(\n    private fb: FormBuilder,\n    private _utils: UtilsService,\n    private _toasterService: ToasterService,\n    private _formHelperService: FormHelperService,\n    private _sessionService: SessionService,\n    private userService: UserService\n  ) {\n    this.isLoading = false;\n  }\n  async ngOnInit() {\n    try {\n    setTimeout(() => {\n      this.form = this.fb.group({\n        password: [\"\", [Validators.required,Validators.minLength(6)]],\n        repeatPassword: ['', Validators.required]\n      }, {validators: this._formHelperService.passwordMatchValidator});\n    });\n    } catch (e) {}\n  }\n\n  /**\n   *  submit the form\n   *  @param model form's values\n   *  @param isValid form's validatoin\n   */\n  async submit() {\n    if (!this.form.valid) {\n      this._toasterService.error(\"Veuillez vérifier le formulaire\");\n      this._formHelperService.validateAllFormFields(this.form);\n      return;\n    }\n    try {\n      const p = {...this.form.value};\n      this.isLoading = true;\n      const user = new User(p);\n      await this.userService.updateProfile(user).toPromise();\n      this._toasterService.success('Votre mot de passe est maintenat à jour');\n      this.isLoading = false;\n      this.form.reset();\n    } catch (e) {\n      this.isLoading = false;\n    }\n  }\n  isFieldValid(field: any) {\n    return this._formHelperService.isFieldValid(this.form, field);\n  }\n  displayFieldCss(field: string) {\n    return {\n      \"has-error\": this.isFieldValid(field),\n      \"has-feedback\": this.isFieldValid(field)\n    };\n  }\n  reset() {\n    this.form.reset();\n  }\n  goBack() {\n    this._utils.back();\n  }\n\n}\n","<div class=\"main-content\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"row\">\n            <div class=\"col-md-12 back-btn-container\">\n              <h4 class=\"title\">Votre profil</h4>\n            </div>\n  \n            <div class=\"col-md-12\">\n              <button form=\"form\" [disabled]=\"isLoading\" class=\"btn btn-fill btn-success pull-right\" type=\"submit\">\n                Enregistrer\n              </button>\n            </div>\n          </div>\n          <div class=\"card\">\n            contenu\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ProfileComponent } from './profile.component';\nimport { ProfileRoutingModule } from './profile-routing.module';\n\n@NgModule({\n  declarations: [ProfileComponent],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ]\n})\nexport class ProfileModule { }","import { FormGroup, FormControl } from '@angular/forms';\nimport { Injectable } from '@angular/core';\n\n/**\n * Form Helper\n *\n * @export\n * @class FormHelperService\n */\n@Injectable({providedIn: 'root'})\nexport class FormHelperService {\n\n  /**\n   * Validate a field in formGroup\n   *\n   * @param {FormGroup} form FormGroup instance\n   * @param {string} field Field to validate\n   * @returns\n   * @memberof FormHelperService\n   */\n  public isFieldValid(form: FormGroup, field: any) {\n    return !form.get(field).valid && form.get(field).touched;\n  }\n\n  /**\n   * Validate form for each item in formGroup\n   *\n   * @param {FormGroup} form FormGroup instance\n   * @memberof FormHelperService\n   */\n  public validateAllFormFields(form: FormGroup) {\n    Object.keys(form.controls).forEach(field => {\n      const control = form.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  /**\n   * Validator for password match\n   *\n   * @private\n   * @param {FormGroup} form FormGroup instance\n   * @returns {*}\n   * @memberof SettingProfilePasswordComponent\n   */\n  public passwordMatchValidator(form: FormGroup): any {\n    if (form) {\n      if (form.get('password').value !== form.get('repeatPassword').value) {\n        return { notMatching: true };\n      }\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare var $: any;\n\n@Injectable({ providedIn: 'root' })\nexport class ToasterService {\n  constructor() {}\n\n  error = (error?: string) => {\n    if (!error) {\n      error = 'Une erreur s\\'est produite pendant le traitement';\n    }\n    this.showNotification(error, 'danger');\n  };\n  success = (success?: string) => {\n    if (!success) {\n      success = 'Traitement réussi avec succès';\n    }\n    this.showNotification(success, 'success');\n  };\n  warning(warn: string) {\n    this.showNotification(warn, 'warning');\n  }\n  info(info: string) {\n    this.showNotification(info, 'info');\n  }\n\n  showNotification(message, type?, from?, align?) {\n    if (!type) {\n      type = 'info';\n    }\n    if (!from) {\n      from = 'top';\n    }\n    if (!align) {\n      align = 'right';\n    }\n    $.notify(\n      {\n        icon: 'notifications',\n        message: message\n      },\n      {\n        type: type,\n        timer: 1500,\n        z_index: 30000,\n        placement: {\n          from: from,\n          align: align\n        }\n      }\n    );\n  }\n}\n","import { HttpService } from \"../providers/http.service\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { BaseModelInterface, BaseModel } from \"../models/base.model\";\n\n/**\n * Abstract BaseSevice Class\n *\n * @export\n * @abstract\n * @class BaseService\n * @template T\n */\nexport abstract class BaseService<T extends BaseModelInterface> {\n  /**\n   *  Create subjet of items total count\n   *\n   * @type {BehaviorSubject<number>}\n   * @memberof BaseService\n   */\n  public totalCount: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n\n  /**\n   *  Create observable of items total count\n   *\n   * @memberof BaseService\n   */\n  public totalCount$: any = this.totalCount.asObservable();\n\n  constructor(\n    protected httpService: HttpService,\n    protected TCreator: { new (arg?: any): T },\n    protected pathPlural: string,\n    protected pathSingular: string\n  ) {}\n\n  /**\n   * Get one item from API\n   *\n   * @param {string} id\n   * @returns {Observable<T>}\n   * @memberof BaseService\n   */\n  public load(id: string): Observable<T> {\n    return this.httpService\n      .get(`${this.pathSingular}/${id}`)\n      .pipe(map(x => new this.TCreator(x)));\n  }\n\n  /**\n   * Get items from API\n   *\n   * @param {number} [page=0]\n   * @param {number} [perPage=10]\n   * @param {*} [query]\n   * @param {string} [order]\n   * @param {string} [select]\n   * @param {boolean} [isAscendant]\n   * @returns {Observable<T[]>}\n   * @memberof BaseService\n   */\n  public list(\n    page: number = 1,\n    perPage: number = 10,\n    query?: any,\n    order?: string,\n    select?: string,\n    isAscendant?: boolean,\n    key?: string\n  ): Observable<T[]> {\n    const $top = perPage.toString();\n    let $query: any = { page, limit: $top };\n    if (query) {\n      $query = {...$query, ...query};\n    }\n    if (order) {\n      $query[\"_sort\"] = order;\n    }\n    if (select) {\n      $query[\"$select\"] = select;\n    }\n    return this.httpService.get(`${this.pathPlural}`, $query).pipe(\n      map(x => {\n        let data = x;\n        if (key && key !== '') {\n          data = x[key];\n        }\n        this.totalCount.next(x.total);\n        return data.rows.map((u: T) => {\n          return new this.TCreator(u);\n        });\n      })\n    );\n  }\n\n  count() {\n    return this.httpService.get(`${this.pathPlural}/count`).pipe(\n      map(x => {\n        this.totalCount.next(x);\n      })\n    );\n  }\n  countFind(arg?: any) {\n    if (!arg) {\n      arg = {};\n    }\n    return this.httpService.get(`${this.pathPlural}/count`, arg);\n  }\n\n  /**\n   * Add item from API\n   *\n   * @param {T} item\n   * @returns {Observable<T>}\n   * @memberof BaseService\n   */\n  public add(item: T): Observable<T> {\n    return this.httpService.post(`${this.pathPlural}`, item.prepareForSending());\n  }\n\n  /**\n   * Update item from API\n   *\n   * @param {T} item\n   * @returns {Observable<T>}\n   * @memberof BaseService\n   */\n  public update(item: T): Observable<T> {\n    return this.httpService.put(\n      `${this.pathSingular}/${item.id}`,\n      item.prepareForSending()\n    );\n  }\n\n  /**\n   * Delete item from API\n   *\n   * @param {T} item\n   * @returns {Observable<T>}\n   * @memberof BaseService\n   */\n  public delete(item: T): Observable<T> {\n    return this.httpService.delete(`${this.pathSingular}/${item.id}`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BaseService } from \"./base.service\";\nimport { User } from \"../models/user.model\";\nimport { HttpService } from \"../providers/http.service\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserService extends BaseService<User> {\n  constructor(protected _httpService: HttpService) {\n    super(_httpService, User, 'users', 'user');\n  }\n  updateProfile(item: User): Observable<User> {\n    return this.httpService.patch(\n      `updateProfile`,\n      item.prepareForSending()\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}