{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/forgot/forgot.component.ts","./src/app/auth/forgot/forgot.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/register2/register2.component.ts","./src/app/auth/register2/register2.component.html","./src/app/shared/pipes/array2string.pipe.ts","./src/app/shared/pipes/capitalize.pipe.ts","./src/app/shared/pipes/double-zero.pipe.ts","./src/app/shared/pipes/format-date.pipe.ts","./src/app/shared/pipes/pipes.module.ts","./src/app/shared/pipes/truncate.pipe.ts","./src/app/shared/providers/form-helper.service.ts","./src/app/shared/providers/toaster.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEE;AACG;AACM;AACG;;;AAErE,MAAM,UAAU,GAAW;IACzB;QACE,IAAI,EAAE,EAAE;QACP,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,qEAAc;aAC1B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACC,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8EAAiB;aAC7B;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,iFAAkB;aAC9B;SACD;KACH;CACF,CAAC;AAMK,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClC,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;6FAEX,iBAAiB;cAJ7B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAC5C,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACyB;AAEpC;AACM;AACU;AAES;AACN;AACM;AAER;AACE;AACS;AAEf;;AAmB/C,MAAM,UAAU;IACrB,YAC0B,YAAwB;QAEhD,kGAAoB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IACnD,CAAC;;yFALU,UAAU;8IAAV,UAAU,yDAEmB,UAAU,qBAXzC;YACP,4DAAY;YACZ,0DAAW;YACX,oEAAc;YACd,kEAAmB;YACnB,sEAAiB;YACjB,yEAAW;SACZ;mIAEU,UAAU,mBAdnB,qEAAc;QACd,wEAAe;QACf,8EAAiB;QACjB,iFAAkB,aAGlB,4DAAY;QACZ,0DAAW;QACX,oEAAc;QACd,kEAAmB;QACnB,sEAAiB;QACjB,yEAAW;6FAGF,UAAU;cAhBtB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,qEAAc;oBACd,wEAAe;oBACf,8EAAiB;oBACjB,iFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,oEAAc;oBACd,kEAAmB;oBACnB,sEAAiB;oBACjB,yEAAW;iBACZ;aACF;sCAGyC,UAAU;sBAA/C,sDAAQ;;sBAAI,sDAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCyB;AAGkB;;;;;;;;;;AAU7D,MAAM,eAAe;IAM1B,YACU,eAA+B,EAC/B,QAAwB,EACxB,OAAe,EACf,GAAgB,EAChB,SAAuB,EACvB,kBAAqC;QALrC,oBAAe,GAAf,eAAe,CAAgB;QAC/B,aAAQ,GAAR,QAAQ,CAAgB;QACxB,YAAO,GAAP,OAAO,CAAQ;QACf,QAAG,GAAH,GAAG,CAAa;QAChB,cAAS,GAAT,SAAS,CAAc;QACvB,uBAAkB,GAAlB,kBAAkB,CAAmB;QAR/C,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;IAWxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAEK,IAAI;;YACR,IAAI;gBACF,qBAAqB;gBACrB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;gBAElE,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBACtC,OAAO;iBACR;aACF;YAAC,OAAO,CAAC,EAAE,GAAG;QACjB,CAAC;KAAA;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACpB,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;SACxE;QAED,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;YAC7H,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,eAAe,CAAC,OAAO,CAC1B,0BAA0B,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,kEAAkE,CACxH,CAAC;gBACF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;aAC3C;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;aAC7D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAC5C,CAAC;IACD,eAAe,CAAC,IAAe,EAAE,KAAa;QAC5C,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;YAC9D,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;SAClE,CAAC;IACJ,CAAC;;8EA7DU,eAAe;+FAAf,eAAe;QCV5B,yEAEE;QAAA,oEAGM;QAEN,yEACI;QAAA,yEACE;QAAA,0EACG;QADiE,2IAAY,YAAQ,IAAC;QACtF,yEACG;QAAA,uEACG;QAAA,oEACH;QAAA,4DAAI;QACP,4DAAM;QACN,wEAAyC;QAAA,mFAAmB;QAAA,4DAAK;QACjE,0EACK;QAAA,2EACI;QAAA,4EACI;QAAA,oEAA0B;QAC9B,4DAAO;QACX,4DAAM;QACP,wEACJ;QAAA,4DAAM;QACN,uEACI;QAAA,6EAA2C;QAAA,yEAAuG;QAAA,qEAAS;QAAA,4DAAI;QAAA,4DAAQ;QAC3K,4DAAM;QACN,2EACI;QAAA,8EAAwE;QAAA,mEAAO;QAAA,4DAAS;QAC5F,4DAAM;QACV,4DAAO;QAER,4DAAM;QACR,yEACI;QAAA,wDACJ;;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAM;;QA5BmD,0DAAkB;QAAlB,+EAAkB;QAOvC,0DAA0C;QAA1C,2GAA0C;QASU,0DAAiC;QAAjC,6IAAiC;QAGpF,0DAAyB;QAAzB,sFAAyB;QAMtD,0DACJ;QADI,sMACJ;;6FDzBS,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;;;;;;;;;;;;;AEZiD;AAGkB;;;;;;;;;AAW7D,MAAM,cAAc;IAMzB,YACU,eAA+B,EAC/B,eAA+B,EAC/B,kBAAqC,EACrC,SAAuB,EACvB,OAAe,EACf,GAAgB;QALhB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,cAAS,GAAT,SAAS,CAAc;QACvB,YAAO,GAAP,OAAO,CAAQ;QACf,QAAG,GAAH,GAAG,CAAa;QAR1B,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;IASpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED;;OAEG;IACG,IAAI;;YACR,IAAI;gBACF,qBAAqB;gBACrB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;gBAEzE,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACjC,OAAO;iBACR;aACF;YAAC,OAAO,CAAC,EAAE,GAAG;QACjB,CAAC;KAAA;IAGD;;;;;OAKG;IACH,MAAM;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBACxD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;gBACvB,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;oBAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;iBAC/C;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBAClC;gBACD,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBAChD,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;IACH,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,IAAe,EAAE,KAAa;QAC5C,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;YAC9D,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;SAClE,CAAC;IACJ,CAAC;;4EA/EU,cAAc;8FAAd,cAAc;QCd3B,yEACI;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAkB;QAAA,gEAAK;QAAA,4DAAK;QAC5B,0EACE;QAD2E,0IAAY,YAAQ,IAAC;QAChG,yEACK;QAAA,sEACL;QAAA,4DAAM;QACN,yEACK;QAAA,sEACL;QAAA,4DAAM;QACN,6EAA6D;QAAA,kEAAM;QAAA,4DAAS;QAC9E,4DAAO;QACT,4DAAM;QACR,4DAAM;QACV,4DAAM;;QAX4D,0DAAkB;QAAlB,+EAAkB;QACjD,0DAA0C;QAA1C,2GAA0C;QAG1C,0DAA6C;QAA7C,8GAA6C;;6FDMnE,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;;;;;;;;;;;;;AEbiD;AAGmC;;;;;;;;;;;AAU9E,MAAM,iBAAiB;IAM5B,YACU,eAA+B,EAC/B,eAA+B,EAC/B,kBAAqC,EACrC,SAAuB,EACvB,OAAe,EACf,GAAgB;QALhB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,oBAAe,GAAf,eAAe,CAAgB;QAC/B,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,cAAS,GAAT,SAAS,CAAc;QACvB,YAAO,GAAP,OAAO,CAAQ;QACf,QAAG,GAAH,GAAG,CAAa;QAR1B,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;IASpB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACzB,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACtD,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACxB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aAC/C,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC;SACzC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IACD,kBAAkB,CAAC,CAAkB;QACnC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAE;YAC5D,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;SAC5B;IACL,CAAC;IAEC;;OAEG;IACG,IAAI;;YACR,IAAI;gBACF,qBAAqB;gBACrB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;gBAEzE,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACjC,OAAO;iBACR;aACF;YAAC,OAAO,CAAC,EAAE,GAAG;QACjB,CAAC;KAAA;IAGD;;;;;OAKG;IACH,MAAM;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC3D,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBAChD,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;IACH,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,IAAe,EAAE,KAAU;QACzC,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;YAC9D,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;SAClE,CAAC;IACJ,CAAC;;kFApFU,iBAAiB;iGAAjB,iBAAiB;QCb9B,yEACI;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAkB;QAAA,6EAAkB;QAAA,4DAAK;QACzC,qEAAI;QAAA,+LAAoI;QAAA,4DAAK;QAC7I,0EACE;QAD2E,6IAAY,YAAQ,IAAC;QAChG,yEACE;QAAA,sEACF;QAAA,4DAAM;QACN,0EACK;QAAA,uEACL;QAAA,4DAAM;QACN,0EACE;QAAA,uEACF;QAAA,4DAAM;QACN,4EACE;QAAA,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACR,qEAAe;QACf,8EAA6D;QAAA,kEAAM;QAAA,4DAAS;QAC9E,4DAAO;QACT,4DAAM;QACR,4DAAM;QACV,4DAAM;;QAtB4D,0DAAkB;QAAlB,+EAAkB;QACjD,0DAAyC;QAAzC,0GAAyC;QAGzC,0DAA0C;QAA1C,2GAA0C;QAG1C,0DAA0C;QAA1C,2GAA0C;QAIxC,0DAA4D;QAA5D,yKAA4D;QAG5D,0DAAkE;QAAlE,yKAAkE;;6FDN1F,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;aACzC;;;;;;;;;;;;;;;;;;;;;;;;;;AEZiD;;;;;;;;;AAc3C,MAAM,kBAAkB;IAI7B,YACU,eAA+B,EAChC,OAAuB,EACtB,kBAAqC,EACrC,SAAuB,EACvB,OAAe,EACf,GAAgB;QALhB,oBAAe,GAAf,eAAe,CAAgB;QAChC,YAAO,GAAP,OAAO,CAAgB;QACtB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,cAAS,GAAT,SAAS,CAAc;QACvB,YAAO,GAAP,OAAO,CAAQ;QACf,QAAG,GAAH,GAAG,CAAa;QAP1B,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;QAYxB,cAAS,GAAG;YACN,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE;YACpC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;YAC9B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE;YAC/B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE;SAC9B,CAAC;IATA,CAAC;IAWL,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAGD;;OAEG;IACG,IAAI;;YACR,IAAI;gBACF,qBAAqB;gBACrB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,EAAE,CAAC;gBAEjE,IAAI,MAAM,EAAE;oBACV,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;iBAC9B;aACF;YAAC,OAAO,CAAC,EAAE,GAAG;QACjB,CAAC;KAAA;IACD;;;;;OAKG;IACH,MAAM;QACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,eAAe;SAChB;aAAM;YACL,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;IACH,CAAC;IAGD;;;;OAIG;IACH,eAAe,CAAC,IAAe,EAAE,KAAa;QAC5C,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;YAC9D,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;SAClE,CAAC;IACJ,CAAC;;oFApEU,kBAAkB;kGAAlB,kBAAkB;QCd/B,yEACI;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAkB;QAAA,uDAA8B;QAAA,4DAAK;QACrD,qEAAI;QAAA,+LAAoI;QAAA,4DAAK;QAC7I,0EACE;QADwD,8IAAY,YAAQ,IAAC;QAC7E,yEACI;QAAA,yEACM;QAAA,0EACI;QAAA,gFAIY;QADA,qMAA8B;QAC1C,4DAAY;QAChB,4DAAM;QACN,0EACI;QAAA,8EAAyD;QAAA,gEAAI;QAAA,4DAAS;QAC1E,4DAAM;QACV,4DAAM;QACZ,4DAAM;QAER,4DAAO;QACT,4DAAM;QACR,4DAAM;QACV,4DAAM;;QArBoB,0DAA8B;QAA9B,wGAA8B;QAMF,0DAAmB;QAAnB,gFAAmB;;6FDK5D,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAoD;;AAG7C,MAAM,iBAAiB;IAE5B,SAAS,CAAC,KAAY;QACpB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1B;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;;kFAPU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAD7B,kDAAI;eAAC,EAAE,IAAI,EAAE,eAAe,EAAE;;;;;;;;;;;;;;ACF/B;AAAA;AAAA;AAAoD;;AAG7C,MAAM,cAAc;IAEzB,SAAS,CAAC,KAAU;QAClB,IAAI,KAAK,EAAE;YACT,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACrE;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;4EAPU,cAAc;8GAAd,cAAc;6FAAd,cAAc;cAD1B,kDAAI;eAAC,EAAE,IAAI,EAAE,YAAY,EAAE;;;;;;;;;;;;;;ACF5B;AAAA;AAAA;AAAoD;;AAG7C,MAAM,cAAc;IAEzB,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;YAC/B,OAAO,GAAG,GAAG,KAAK,CAAC;SACpB;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;4EAPU,cAAc;wGAAd,cAAc;6FAAd,cAAc;cAD1B,kDAAI;eAAC,EAAE,IAAI,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACFtB;AAAA;AAAA;AAAA;AAAA;AAAoD;AACnB;;AAG1B,MAAM,cAAc;IAEzB,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,EAAE;YACT,OAAO,mCAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC3C;QACD,OAAO,KAAK,CAAC;IACf,CAAC;;4EAPU,cAAc;8GAAd,cAAc;6FAAd,cAAc;cAD1B,kDAAI;eAAC,EAAE,IAAI,EAAE,YAAY,EAAE;;;;;;;;;;;;;;ACH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACU;AACK;AACT;AACK;AACA;;AAM7C,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAJb,CAAC,4DAAY,CAAC;mIAIZ,WAAW,mBAHP,+DAAc,EAAE,oEAAiB,EAAE,2DAAY,EAAE,gEAAc,EAAE,gEAAc,aADpF,4DAAY,aAEZ,+DAAc,EAAE,oEAAiB,EAAE,2DAAY,EAAE,gEAAc,EAAE,gEAAc;6FAE9E,WAAW;cALvB,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,+DAAc,EAAE,oEAAiB,EAAE,2DAAY,EAAE,gEAAc,EAAE,gEAAc,CAAC;gBAC/F,OAAO,EAAE,CAAC,+DAAc,EAAE,oEAAiB,EAAE,2DAAY,EAAE,gEAAc,EAAE,gEAAc,CAAC;aAC3F;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAoD;;AACpD;;;;GAIG;AAII,MAAM,YAAY;IACvB;;;;OAIG;IACH,SAAS,CAAC,KAAa,EAAE,QAAgB,EAAE,EAAE,QAAgB,KAAK;QAChE,IAAI,CAAC,KAAK,EAAE;YAAE,KAAK,GAAG,EAAE,CAAC;SAAE;QAE3B,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,KAAK,IAAI,CAAC,CAAC,CAAC;YACZ,OAAO,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SACnG;aAAM;YACL,OAAO,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;SACzE;IACH,CAAC;;wEAfU,YAAY;0GAAZ,YAAY;6FAAZ,YAAY;cAHxB,kDAAI;eAAC;gBACJ,IAAI,EAAE,UAAU;aACjB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAwD;AACb;;AAE3C;;;;;GAKG;AAEI,MAAM,iBAAiB;IAE5B;;;;;;;OAOG;IACI,YAAY,CAAC,IAAe,EAAE,KAAU;QAC7C,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;IAC3D,CAAC;IAED;;;;;OAKG;IACI,qBAAqB,CAAC,IAAe;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,YAAY,0DAAW,EAAE;gBAClC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3C;iBAAM,IAAI,OAAO,YAAY,wDAAS,EAAE;gBACvC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;OAOG;IACI,sBAAsB,CAAC,IAAe;QAC3C,IAAI,IAAI,EAAE;YACR,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE;gBACnE,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;aAC9B;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;kFA9CU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBADL,MAAM;6FAClB,iBAAiB;cAD7B,wDAAU;eAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;;;;;;;;;;;ACThC;AAAA;AAAA;AAA2C;;AAIpC,MAAM,cAAc;IACzB;QAEA,UAAK,GAAG,CAAC,KAAc,EAAE,EAAE;YACzB,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,kDAAkD,CAAC;aAC5D;YACD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACzC,CAAC,CAAC;QACF,YAAO,GAAG,CAAC,OAAgB,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,+BAA+B,CAAC;aAC3C;YACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC5C,CAAC,CAAC;IAba,CAAC;IAchB,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACzC,CAAC;IACD,IAAI,CAAC,IAAY;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACtC,CAAC;IAED,gBAAgB,CAAC,OAAO,EAAE,IAAK,EAAE,IAAK,EAAE,KAAM;QAC5C,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,GAAG,MAAM,CAAC;SACf;QACD,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,GAAG,KAAK,CAAC;SACd;QACD,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,OAAO,CAAC;SACjB;QACD,CAAC,CAAC,MAAM,CACN;YACE,IAAI,EAAE,eAAe;YACrB,OAAO,EAAE,OAAO;SACjB,EACD;YACE,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,KAAK;YACd,SAAS,EAAE;gBACT,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,KAAK;aACb;SACF,CACF,CAAC;IACJ,CAAC;;4EA/CU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBADD,MAAM;6FACnB,cAAc;cAD1B,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { RegisterComponent } from './register/register.component';\nimport { Register2Component } from './register2/register2.component';\n\nconst AuthRoutes: Routes = [\n  {\n    path: '',\n     children: [\n       {\n         path: 'login',\n         component: LoginComponent\n       },\n       {\n         path: 'forgot',\n         component: ForgotComponent\n       },\n       {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: 'register2',\n        component: Register2Component\n      }\n     ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(AuthRoutes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import {  Optional, SkipSelf } from '@angular/core';\nimport { throwIfAlreadyLoaded } from 'app/shared/guards/module-import.guard';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { PipesModule } from 'app/shared/pipes/pipes.module';\nimport { Register2Component } from './register2/register2.component';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    ForgotComponent,\n    RegisterComponent,\n    Register2Component\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    PipesModule\n  ]\n})\nexport class AuthModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule: AuthModule\n  ) {\n    throwIfAlreadyLoaded(parentModule, 'AuthModule');\n  }\n }\n","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n\n  public form: FormGroup;\n  isSubmitting: boolean;\n  date: Date = new Date();\n\n  constructor(\n    private _toasterService: ToasterService,\n    private _session: SessionService,\n    private _router: Router,\n    private _fb: FormBuilder,\n    private sanitizer: DomSanitizer,\n    private _formHelperService: FormHelperService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      email: [null, [Validators.required, Validators.email]]\n    });\n    this.load();\n  }\n\n  async load() {\n    try {\n      // Get session Status\n      const status = await this._session.getSessionStatus().toPromise();\n\n      if (status) {\n        this._router.navigate(['/dashboard']);\n        return;\n      }\n    } catch (e) { }\n  }\n\n  submit() {\n    if (!this.form.valid) {\n      return this._toasterService.warning('Merci d\\'entrer un email valide');\n    }\n\n    this._session.forgotPassword({ email: this.form.value.email, sousdomaine: this.form.value.sousdomaine }).subscribe(isSuccess => {\n      if (isSuccess) {\n        this._toasterService.success(\n          'Un email a été envoyé à ' + this.form.value.email + ', veuillez suivre les instructions pour un nouveau mot de passe.'\n        );\n        this._router.navigate(['/auth', 'login']);\n      } else {\n        this._toasterService.error('Mauvais détails de connexion.');\n      }\n    });\n  }\n\n  loginNavigation() {\n    this._router.navigate(['/auth', 'login']);\n  }\n  displayFieldCss(form: FormGroup, field: string) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n}\n\n","\n\n\n<div class=\"d-md-flex h-md-100 align-items-center\">\n\n  <div class=\"col-md-7 p-0 bg-image h-md-100\">\n      <!-- <div class=\"text-white d-md-flex align-items-center h-100 p-5 text-center justify-content-center\">\n      </div> -->\n  </div>\n  \n  <div class=\"col-md-5 p-0 login-form h-md-100 loginarea\">\n      <div class=\"d-md-flex h-md-100 \">\n        <form class=\"signin-form justify-content-center\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n           <div class=\"loginarea text-center\">\n              <a href=\"#\">\n                 <img src=\"../../../assets/img/col-right@3x.png\" class=\" balme-logo\"  alt=\"\">\n              </a>\n           </div>\n           <h5 class=\"mb-4 text-center login-title\">Mot de passe oublié</h5>\n           <div class=\"input-group\" [ngClass]=\"displayFieldCss(form, 'email')\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                        <i class=\"fa fa-user\"></i>    \n                    </span>\n                </div>\n               <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" placeholder=\"Entrez votre e-mail\" required=\"\">\n           </div>\n           <div>\n               <small class=\"d-block mb-4 mt-3 pull-left\"><a class=\"text-theme text-sm\" [routerLink]=\"['/auth', 'login']\" routerLinkActive=\"router-link-active\" >< Revenir</a></small>\n           </div>\n           <div class=\"text-right\">\n               <button type=\"submit\" [disabled]=\"isSubmitting\" class=\"btn btn-primary\">Envoyer</button>\n           </div>\n       </form>\n       \n      </div>\n    <p class=\"copyright text-center\">\n        © {{date| date:'yyyy'}} - Tout droits réservés\n    </p>\n  </div> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { User } from 'app/shared/models/user.model';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public form: FormGroup;\n  public isSubmitting: boolean;\n  date: Date = new Date();\n\n  constructor(\n    private _toasterService: ToasterService,\n    private _sessionService: SessionService,\n    private _formHelperService: FormHelperService,\n    private sanitizer: DomSanitizer,\n    private _router: Router,\n    private _fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      email: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n    this.load();\n  }\n\n  /**\n   * [Description] Load data\n   */\n  async load() {\n    try {\n      // Get session Status\n      const status = await this._sessionService.getSessionStatus().toPromise();\n\n      if (status) {\n        this._router.navigate(['/home']);\n        return;\n      }\n    } catch (e) { }\n  }\n\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof LoginComponent\n   */\n  submit() {\n    this.isSubmitting = true;\n    if (this.form.valid) {\n      this._sessionService.logout();\n      this._sessionService.login(this.form.value).subscribe(_ => {\n        console.log('azaza', _)\n        if (_.user.role === 'user') {\n          this._router.navigate(['/auth', 'register2']);\n        } else {\n          this._router.navigate(['/home']);\n        }\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      }, err => {\n        this._toasterService.error('Wrong credentiels');\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      });\n    } else {\n      this._formHelperService.validateAllFormFields(this.form);\n      this.isSubmitting = false;\n    }\n  }\n\n  /**\n   * [Description] Set error class on form based on Form and field validation\n   * @param {FormGroup} form\n   * @param {string} field\n   */\n  displayFieldCss(form: FormGroup, field: string) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n\n}\n\n","<div class=\"container pt-5 pb-5\" id=\"auth\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1 col-lg-8 offset-lg-1\">\n        <h3 class=\"title\">Login</h3>\n        <form class=\"col-sm-10 col-md-10 col-lg-8 pl-0 mt-5 pt-5\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'email')\">\n               <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" placeholder=\"Entrez votre e-mail\" required=\"\">\n          </div>\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'password')\">\n               <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" placeholder=\"Mot de passe\" required=\"\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary btn-theme mt-2\">Signup</button>\n        </form>\n      </div>        \n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { User } from 'app/shared/models/user.model';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n\n  public form: FormGroup;\n  public isSubmitting: boolean;\n  date: Date = new Date();\n\n  constructor(\n    private _toasterService: ToasterService,\n    private _sessionService: SessionService,\n    private _formHelperService: FormHelperService,\n    private sanitizer: DomSanitizer,\n    private _router: Router,\n    private _fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      name: [null, Validators.required],\n      phone: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      passwords: this._fb.group({\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', [Validators.required]],\n    }, { validator: this.passwordConfirming }),\n    });\n    this.load();\n  }\n  passwordConfirming(c: AbstractControl): { invalid: boolean } {\n    if (c.get('password').value !== c.get('confirmPassword').value) {\n        return { invalid: true };\n    }\n}\n\n  /**\n   * [Description] Load data\n   */\n  async load() {\n    try {\n      // Get session Status\n      const status = await this._sessionService.getSessionStatus().toPromise();\n\n      if (status) {\n        this._router.navigate(['/home']);\n        return;\n      }\n    } catch (e) { }\n  }\n\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof RegisterComponent\n   */\n  submit() {\n    this.isSubmitting = true;\n    if (this.form.valid) {\n      this._sessionService.logout();\n      this._sessionService.register(this.form.value).subscribe(_ => {\n        this._router.navigate(['/auth', 'register2']);\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      }, err => {\n        this._toasterService.error('Wrong credentiels');\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      });\n    } else {\n      this._formHelperService.validateAllFormFields(this.form);\n      this.isSubmitting = false;\n    }\n  }\n\n  /**\n   * [Description] Set error class on form based on Form and field validation\n   * @param {FormGroup} form\n   * @param {string} field\n   */\n  displayFieldCss(form: FormGroup, field: any) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n\n}\n\n","<div class=\"container pt-5 pb-5\" id=\"auth\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1 col-lg-8 offset-lg-1\">\n        <h3 class=\"title\">Create an account.</h3>\n        <h6>Register for an account using the details below. Once approved by the admin, you can fill forms and register your property/Business.</h6>\n        <form class=\"col-sm-10 col-md-10 col-lg-8 pl-0 mt-5 pt-5\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'name')\">\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Listing Name\" required=\"\">\n          </div>\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'phone')\">\n               <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\" placeholder=\"Phone Number\" required=\"\">\n          </div>\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'email')\">\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" placeholder=\"Email\" required=\"\">\n          </div>\n          <ng-container formGroupName=\"passwords\">\n            <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, ['passwords', 'password'])\">\n                <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\">\n            </div>\n            <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, ['passwords','confirmPassword'])\">\n                <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" formControlName=\"confirmPassword\" placeholder=\"Retype password\" required=\"\">\n            </div>\n          </ng-container>\n          <button type=\"submit\" class=\"btn btn-primary btn-theme mt-2\">Signup</button>\n        </form>\n      </div>        \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { User } from 'app/shared/models/user.model';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-register2',\n  templateUrl: './register2.component.html',\n  styleUrls: ['./register2.component.scss']\n})\nexport class Register2Component implements OnInit {\n  public form: FormGroup;\n  public isSubmitting: boolean;\n  date: Date = new Date();\n  constructor(\n    private _toasterService: ToasterService,\n    public session: SessionService,\n    private _formHelperService: FormHelperService,\n    private sanitizer: DomSanitizer,\n    private _router: Router,\n    private _fb: FormBuilder\n  ) { }\n\n  selectedregister: number;\n\n  registers = [\n        { id: 1, name: 'HOTEL/RESORT/CAMP' },\n        { id: 2, name: 'GUEST HOUSE' },\n        { id: 3, name: 'TRAVEL AGENT' },\n        { id: 4, name: 'HOMESTAY' },\n    ];\n\n  ngOnInit() {\n    this.load();\n  }\n \n\n  /**\n   * [Description] Load data\n   */\n  async load() {\n    try {\n      // Get session Status\n      const status = await this.session.getSessionStatus().toPromise();\n\n      if (status) {\n        console.log('status', status)\n      }\n    } catch (e) { }\n  }\n  /**\n   *\n   *\n   * @returns\n   * @memberof Register2Component\n   */\n  submit() {\n    this.isSubmitting = true;\n    if (this.form.valid) {\n      this.session.logout();\n      //register here\n    } else {\n      this._formHelperService.validateAllFormFields(this.form);\n      this.isSubmitting = false;\n    }\n  }\n\n\n  /**\n   * [Description] Set error class on form based on Form and field validation\n   * @param {FormGroup} form\n   * @param {string} field\n   */\n  displayFieldCss(form: FormGroup, field: string) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n\n}\n","<div class=\"container pt-5 pb-5\" id=\"auth\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1 col-lg-8 offset-lg-1\">\n        <h3 class=\"title\">Welcome {{session.user.name}}.</h3>\n        <h6>Register for an account using the details below. Once approved by the admin, you can fill forms and register your property/Business.</h6>\n        <form class=\"col-sm-10 col-md-10 col-lg-8 pl-0 mt-5 pt-5\" (ngSubmit)=\"submit()\">\n          <div class=\"form-group\">\n              <div class=\"d-flex align-items-center text-white\">\n                    <div class=\"col-lg-10 col-md-8\">\n                        <ng-select class=\"registerng\" [items]=\"registers\" name=\"registeringfor\" placeholder=\"Registering for\"\n                                    bindLabel=\"name\" \n                                    bindValue=\"id\" \n                                    [(ngModel)]=\"selectedregister\">\n                        </ng-select> \n                    </div>\n                    <div class=\"btn-next col-lg-2 col-md-4\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-theme \">Next</button>\n                    </div> \n                </div>   \n          </div>\n        \n        </form>\n      </div>        \n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'arrayToString' })\nexport class ArrayToStringPipe implements PipeTransform {\n\n  transform(value: any[]): string {\n    if (value.length > 0) {\n      return value.join(' - ');\n    }\n    return '';\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: any) {\n    if (value) {\n      return value.charAt(0).toUpperCase() + value.toLowerCase().slice(1);\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'zero' })\nexport class DoubleZeroPipe implements PipeTransform {\n\n  transform(value: number) {\n    if (!isNaN(value) && value < 10) {\n      return '0' + value;\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({ name: 'formatDate' })\nexport class FormatDatePipe implements PipeTransform {\n\n  transform(value: string) {\n    if (value) {\n      return moment(value).format('DD/MM/YYYY');\n    }\n    return value;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CapitalizePipe } from './capitalize.pipe';\nimport { ArrayToStringPipe } from './array2string.pipe';\nimport { TruncatePipe } from './truncate.pipe';\nimport { FormatDatePipe } from './format-date.pipe';\nimport { DoubleZeroPipe } from './double-zero.pipe';\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CapitalizePipe, ArrayToStringPipe, TruncatePipe, FormatDatePipe, DoubleZeroPipe],\n  exports: [CapitalizePipe, ArrayToStringPipe, TruncatePipe, FormatDatePipe, DoubleZeroPipe]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Truncate pipe\n * @example\n * {{ item.userFirstname | truncate: '1':'.' }}\n */\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * @param {string} value Value to transform\n   * @param {number} limit Value limit to transform\n   * @param {string} trail Char to replace truncated value\n   */\n  transform(value: string, limit: number = 50, trail: string = '...'): string {\n    if (!value) { value = ''; }\n\n    if (limit < 0) {\n      limit *= -1;\n      return value.length > limit ? trail + value.substring(value.length - limit, value.length) : value;\n    } else {\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n","import { FormGroup, FormControl } from '@angular/forms';\nimport { Injectable } from '@angular/core';\n\n/**\n * Form Helper\n *\n * @export\n * @class FormHelperService\n */\n@Injectable({providedIn: 'root'})\nexport class FormHelperService {\n\n  /**\n   * Validate a field in formGroup\n   *\n   * @param {FormGroup} form FormGroup instance\n   * @param {string} field Field to validate\n   * @returns\n   * @memberof FormHelperService\n   */\n  public isFieldValid(form: FormGroup, field: any) {\n    return !form.get(field).valid && form.get(field).touched;\n  }\n\n  /**\n   * Validate form for each item in formGroup\n   *\n   * @param {FormGroup} form FormGroup instance\n   * @memberof FormHelperService\n   */\n  public validateAllFormFields(form: FormGroup) {\n    Object.keys(form.controls).forEach(field => {\n      const control = form.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  /**\n   * Validator for password match\n   *\n   * @private\n   * @param {FormGroup} form FormGroup instance\n   * @returns {*}\n   * @memberof SettingProfilePasswordComponent\n   */\n  public passwordMatchValidator(form: FormGroup): any {\n    if (form) {\n      if (form.get('password').value !== form.get('repeatPassword').value) {\n        return { notMatching: true };\n      }\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare var $: any;\n\n@Injectable({ providedIn: 'root' })\nexport class ToasterService {\n  constructor() {}\n\n  error = (error?: string) => {\n    if (!error) {\n      error = 'Une erreur s\\'est produite pendant le traitement';\n    }\n    this.showNotification(error, 'danger');\n  };\n  success = (success?: string) => {\n    if (!success) {\n      success = 'Traitement réussi avec succès';\n    }\n    this.showNotification(success, 'success');\n  };\n  warning(warn: string) {\n    this.showNotification(warn, 'warning');\n  }\n  info(info: string) {\n    this.showNotification(info, 'info');\n  }\n\n  showNotification(message, type?, from?, align?) {\n    if (!type) {\n      type = 'info';\n    }\n    if (!from) {\n      from = 'top';\n    }\n    if (!align) {\n      align = 'right';\n    }\n    $.notify(\n      {\n        icon: 'notifications',\n        message: message\n      },\n      {\n        type: type,\n        timer: 1500,\n        z_index: 30000,\n        placement: {\n          from: from,\n          align: align\n        }\n      }\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}