{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/forgot/forgot.component.ts","webpack:///src/app/auth/forgot/forgot.component.html","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/auth/register2/register2.component.ts","webpack:///src/app/auth/register2/register2.component.html","webpack:///src/app/shared/pipes/array2string.pipe.ts","webpack:///src/app/shared/pipes/capitalize.pipe.ts","webpack:///src/app/shared/pipes/double-zero.pipe.ts","webpack:///src/app/shared/pipes/format-date.pipe.ts","webpack:///src/app/shared/pipes/pipes.module.ts","webpack:///src/app/shared/pipes/truncate.pipe.ts","webpack:///src/app/shared/providers/form-helper.service.ts","webpack:///src/app/shared/providers/toaster.service.ts"],"names":["AuthRoutes","path","children","component","AuthRoutingModule","forChild","imports","exports","AuthModule","parentModule","declarations","ForgotComponent","_toasterService","_session","_router","_fb","sanitizer","_formHelperService","date","Date","form","group","email","required","load","getSessionStatus","toPromise","status","navigate","valid","warning","forgotPassword","value","sousdomaine","subscribe","isSuccess","success","error","field","isFieldValid","submit","selector","templateUrl","styleUrls","LoginComponent","_sessionService","password","isSubmitting","logout","login","_","console","log","user","role","validateAllFormFields","err","RegisterComponent","name","phone","passwords","minLength","confirmPassword","validator","passwordConfirming","c","get","invalid","register","Register2Component","session","registers","id","ArrayToStringPipe","length","join","CapitalizePipe","charAt","toUpperCase","toLowerCase","slice","DoubleZeroPipe","isNaN","FormatDatePipe","format","PipesModule","TruncatePipe","limit","trail","substring","FormHelperService","touched","Object","keys","controls","forEach","control","markAsTouched","onlySelf","notMatching","providedIn","ToasterService","showNotification","warn","info","message","type","from","align","$","notify","icon","timer","z_index","placement"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { RegisterComponent } from './register/register.component';\nimport { Register2Component } from './register2/register2.component';\n\nconst AuthRoutes: Routes = [\n  {\n    path: '',\n     children: [\n       {\n         path: 'login',\n         component: LoginComponent\n       },\n       {\n         path: 'forgot',\n         component: ForgotComponent\n       },\n       {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: 'register2',\n        component: Register2Component\n      }\n     ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(AuthRoutes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule {}\n","import {  Optional, SkipSelf } from '@angular/core';\nimport { throwIfAlreadyLoaded } from 'app/shared/guards/module-import.guard';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { PipesModule } from 'app/shared/pipes/pipes.module';\nimport { Register2Component } from './register2/register2.component';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    ForgotComponent,\n    RegisterComponent,\n    Register2Component\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    PipesModule\n  ]\n})\nexport class AuthModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule: AuthModule\n  ) {\n    throwIfAlreadyLoaded(parentModule, 'AuthModule');\n  }\n }\n","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.scss']\n})\nexport class ForgotComponent implements OnInit {\n\n  public form: FormGroup;\n  isSubmitting: boolean;\n  date: Date = new Date();\n\n  constructor(\n    private _toasterService: ToasterService,\n    private _session: SessionService,\n    private _router: Router,\n    private _fb: FormBuilder,\n    private sanitizer: DomSanitizer,\n    private _formHelperService: FormHelperService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      email: [null, [Validators.required, Validators.email]]\n    });\n    this.load();\n  }\n\n  async load() {\n    try {\n      // Get session Status\n      const status = await this._session.getSessionStatus().toPromise();\n\n      if (status) {\n        this._router.navigate(['/dashboard']);\n        return;\n      }\n    } catch (e) { }\n  }\n\n  submit() {\n    if (!this.form.valid) {\n      return this._toasterService.warning('Merci d\\'entrer un email valide');\n    }\n\n    this._session.forgotPassword({ email: this.form.value.email, sousdomaine: this.form.value.sousdomaine }).subscribe(isSuccess => {\n      if (isSuccess) {\n        this._toasterService.success(\n          'Un email a été envoyé à ' + this.form.value.email + ', veuillez suivre les instructions pour un nouveau mot de passe.'\n        );\n        this._router.navigate(['/auth', 'login']);\n      } else {\n        this._toasterService.error('Mauvais détails de connexion.');\n      }\n    });\n  }\n\n  loginNavigation() {\n    this._router.navigate(['/auth', 'login']);\n  }\n  displayFieldCss(form: FormGroup, field: string) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n}\n\n","\n\n\n<div class=\"d-md-flex h-md-100 align-items-center\">\n\n  <div class=\"col-md-7 p-0 bg-image h-md-100\">\n      <!-- <div class=\"text-white d-md-flex align-items-center h-100 p-5 text-center justify-content-center\">\n      </div> -->\n  </div>\n  \n  <div class=\"col-md-5 p-0 login-form h-md-100 loginarea\">\n      <div class=\"d-md-flex h-md-100 \">\n        <form class=\"signin-form justify-content-center\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n           <div class=\"loginarea text-center\">\n              <a href=\"#\">\n                 <img src=\"../../../assets/img/col-right@3x.png\" class=\" balme-logo\"  alt=\"\">\n              </a>\n           </div>\n           <h5 class=\"mb-4 text-center login-title\">Mot de passe oublié</h5>\n           <div class=\"input-group\" [ngClass]=\"displayFieldCss(form, 'email')\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">\n                        <i class=\"fa fa-user\"></i>    \n                    </span>\n                </div>\n               <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" placeholder=\"Entrez votre e-mail\" required=\"\">\n           </div>\n           <div>\n               <small class=\"d-block mb-4 mt-3 pull-left\"><a class=\"text-theme text-sm\" [routerLink]=\"['/auth', 'login']\" routerLinkActive=\"router-link-active\" >< Revenir</a></small>\n           </div>\n           <div class=\"text-right\">\n               <button type=\"submit\" [disabled]=\"isSubmitting\" class=\"btn btn-primary\">Envoyer</button>\n           </div>\n       </form>\n       \n      </div>\n    <p class=\"copyright text-center\">\n        © {{date| date:'yyyy'}} - Tout droits réservés\n    </p>\n  </div> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { User } from 'app/shared/models/user.model';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public form: FormGroup;\n  public isSubmitting: boolean;\n  date: Date = new Date();\n\n  constructor(\n    private _toasterService: ToasterService,\n    private _sessionService: SessionService,\n    private _formHelperService: FormHelperService,\n    private sanitizer: DomSanitizer,\n    private _router: Router,\n    private _fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      email: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n    this.load();\n  }\n\n  /**\n   * [Description] Load data\n   */\n  async load() {\n    try {\n      // Get session Status\n      const status = await this._sessionService.getSessionStatus().toPromise();\n\n      if (status) {\n        this._router.navigate(['/home']);\n        return;\n      }\n    } catch (e) { }\n  }\n\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof LoginComponent\n   */\n  submit() {\n    this.isSubmitting = true;\n    if (this.form.valid) {\n      this._sessionService.logout();\n      this._sessionService.login(this.form.value).subscribe(_ => {\n        console.log('azaza', _)\n        if (_.user.role === 'user') {\n          this._router.navigate(['/auth', 'register2']);\n        } else {\n          this._router.navigate(['/home']);\n        }\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      }, err => {\n        this._toasterService.error('Wrong credentiels');\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      });\n    } else {\n      this._formHelperService.validateAllFormFields(this.form);\n      this.isSubmitting = false;\n    }\n  }\n\n  /**\n   * [Description] Set error class on form based on Form and field validation\n   * @param {FormGroup} form\n   * @param {string} field\n   */\n  displayFieldCss(form: FormGroup, field: string) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n\n}\n\n","<div class=\"container pt-5 pb-5\" id=\"auth\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1 col-lg-8 offset-lg-1\">\n        <h3 class=\"title\">Login</h3>\n        <form class=\"col-sm-10 col-md-10 col-lg-8 pl-0 mt-5 pt-5\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'email')\">\n               <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" placeholder=\"Entrez votre e-mail\" required=\"\">\n          </div>\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'password')\">\n               <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" placeholder=\"Mot de passe\" required=\"\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary btn-theme mt-2\">Signup</button>\n        </form>\n      </div>        \n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { User } from 'app/shared/models/user.model';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n\n  public form: FormGroup;\n  public isSubmitting: boolean;\n  date: Date = new Date();\n\n  constructor(\n    private _toasterService: ToasterService,\n    private _sessionService: SessionService,\n    private _formHelperService: FormHelperService,\n    private sanitizer: DomSanitizer,\n    private _router: Router,\n    private _fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form = this._fb.group({\n      name: [null, Validators.required],\n      phone: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      passwords: this._fb.group({\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', [Validators.required]],\n    }, { validator: this.passwordConfirming }),\n    });\n    this.load();\n  }\n  passwordConfirming(c: AbstractControl): { invalid: boolean } {\n    if (c.get('password').value !== c.get('confirmPassword').value) {\n        return { invalid: true };\n    }\n}\n\n  /**\n   * [Description] Load data\n   */\n  async load() {\n    try {\n      // Get session Status\n      const status = await this._sessionService.getSessionStatus().toPromise();\n\n      if (status) {\n        this._router.navigate(['/home']);\n        return;\n      }\n    } catch (e) { }\n  }\n\n\n  /**\n   *\n   *\n   * @returns\n   * @memberof RegisterComponent\n   */\n  submit() {\n    this.isSubmitting = true;\n    if (this.form.valid) {\n      this._sessionService.logout();\n      this._sessionService.register(this.form.value).subscribe(_ => {\n        this._router.navigate(['/auth', 'register2']);\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      }, err => {\n        this._toasterService.error('Wrong credentiels');\n        this._formHelperService.validateAllFormFields(this.form);\n        this.isSubmitting = false;\n      });\n    } else {\n      this._formHelperService.validateAllFormFields(this.form);\n      this.isSubmitting = false;\n    }\n  }\n\n  /**\n   * [Description] Set error class on form based on Form and field validation\n   * @param {FormGroup} form\n   * @param {string} field\n   */\n  displayFieldCss(form: FormGroup, field: any) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n\n}\n\n","<div class=\"container pt-5 pb-5\" id=\"auth\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1 col-lg-8 offset-lg-1\">\n        <h3 class=\"title\">Create an account.</h3>\n        <h6>Register for an account using the details below. Once approved by the admin, you can fill forms and register your property/Business.</h6>\n        <form class=\"col-sm-10 col-md-10 col-lg-8 pl-0 mt-5 pt-5\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'name')\">\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Listing Name\" required=\"\">\n          </div>\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'phone')\">\n               <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\" placeholder=\"Phone Number\" required=\"\">\n          </div>\n          <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, 'email')\">\n            <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" placeholder=\"Email\" required=\"\">\n          </div>\n          <ng-container formGroupName=\"passwords\">\n            <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, ['passwords', 'password'])\">\n                <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" placeholder=\"Password\" required=\"\">\n            </div>\n            <div class=\"form-group\"  [ngClass]=\"displayFieldCss(form, ['passwords','confirmPassword'])\">\n                <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" formControlName=\"confirmPassword\" placeholder=\"Retype password\" required=\"\">\n            </div>\n          </ng-container>\n          <button type=\"submit\" class=\"btn btn-primary btn-theme mt-2\">Signup</button>\n        </form>\n      </div>        \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../../shared/providers/session.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToasterService } from 'app/shared/providers/toaster.service';\nimport { User } from 'app/shared/models/user.model';\nimport { FormHelperService } from 'app/shared/providers/form-helper.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-register2',\n  templateUrl: './register2.component.html',\n  styleUrls: ['./register2.component.scss']\n})\nexport class Register2Component implements OnInit {\n  public form: FormGroup;\n  public isSubmitting: boolean;\n  date: Date = new Date();\n  constructor(\n    private _toasterService: ToasterService,\n    public session: SessionService,\n    private _formHelperService: FormHelperService,\n    private sanitizer: DomSanitizer,\n    private _router: Router,\n    private _fb: FormBuilder\n  ) { }\n\n  selectedregister: number;\n\n  registers = [\n        { id: 1, name: 'HOTEL/RESORT/CAMP' },\n        { id: 2, name: 'GUEST HOUSE' },\n        { id: 3, name: 'TRAVEL AGENT' },\n        { id: 4, name: 'HOMESTAY' },\n    ];\n\n  ngOnInit() {\n    this.load();\n  }\n \n\n  /**\n   * [Description] Load data\n   */\n  async load() {\n    try {\n      // Get session Status\n      const status = await this.session.getSessionStatus().toPromise();\n\n      if (status) {\n        console.log('status', status)\n      }\n    } catch (e) { }\n  }\n  /**\n   *\n   *\n   * @returns\n   * @memberof Register2Component\n   */\n  submit() {\n    this.isSubmitting = true;\n    if (this.form.valid) {\n      this.session.logout();\n      //register here\n    } else {\n      this._formHelperService.validateAllFormFields(this.form);\n      this.isSubmitting = false;\n    }\n  }\n\n\n  /**\n   * [Description] Set error class on form based on Form and field validation\n   * @param {FormGroup} form\n   * @param {string} field\n   */\n  displayFieldCss(form: FormGroup, field: string) {\n    return {\n      'has-error': this._formHelperService.isFieldValid(form, field),\n      'has-feedback': this._formHelperService.isFieldValid(form, field)\n    };\n  }\n\n}\n","<div class=\"container pt-5 pb-5\" id=\"auth\">\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1 col-lg-8 offset-lg-1\">\n        <h3 class=\"title\">Welcome {{session.user.name}}.</h3>\n        <h6>Register for an account using the details below. Once approved by the admin, you can fill forms and register your property/Business.</h6>\n        <form class=\"col-sm-10 col-md-10 col-lg-8 pl-0 mt-5 pt-5\" (ngSubmit)=\"submit()\">\n          <div class=\"form-group\">\n              <div class=\"d-flex align-items-center text-white\">\n                    <div class=\"col-lg-10 col-md-8\">\n                        <ng-select class=\"registerng\" [items]=\"registers\" name=\"registeringfor\" placeholder=\"Registering for\"\n                                    bindLabel=\"name\" \n                                    bindValue=\"id\" \n                                    [(ngModel)]=\"selectedregister\">\n                        </ng-select> \n                    </div>\n                    <div class=\"btn-next col-lg-2 col-md-4\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-theme \">Next</button>\n                    </div> \n                </div>   \n          </div>\n        \n        </form>\n      </div>        \n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'arrayToString' })\nexport class ArrayToStringPipe implements PipeTransform {\n\n  transform(value: any[]): string {\n    if (value.length > 0) {\n      return value.join(' - ');\n    }\n    return '';\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'capitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: any) {\n    if (value) {\n      return value.charAt(0).toUpperCase() + value.toLowerCase().slice(1);\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'zero' })\nexport class DoubleZeroPipe implements PipeTransform {\n\n  transform(value: number) {\n    if (!isNaN(value) && value < 10) {\n      return '0' + value;\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({ name: 'formatDate' })\nexport class FormatDatePipe implements PipeTransform {\n\n  transform(value: string) {\n    if (value) {\n      return moment(value).format('DD/MM/YYYY');\n    }\n    return value;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CapitalizePipe } from './capitalize.pipe';\nimport { ArrayToStringPipe } from './array2string.pipe';\nimport { TruncatePipe } from './truncate.pipe';\nimport { FormatDatePipe } from './format-date.pipe';\nimport { DoubleZeroPipe } from './double-zero.pipe';\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CapitalizePipe, ArrayToStringPipe, TruncatePipe, FormatDatePipe, DoubleZeroPipe],\n  exports: [CapitalizePipe, ArrayToStringPipe, TruncatePipe, FormatDatePipe, DoubleZeroPipe]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Truncate pipe\n * @example\n * {{ item.userFirstname | truncate: '1':'.' }}\n */\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * @param {string} value Value to transform\n   * @param {number} limit Value limit to transform\n   * @param {string} trail Char to replace truncated value\n   */\n  transform(value: string, limit: number = 50, trail: string = '...'): string {\n    if (!value) { value = ''; }\n\n    if (limit < 0) {\n      limit *= -1;\n      return value.length > limit ? trail + value.substring(value.length - limit, value.length) : value;\n    } else {\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n","import { FormGroup, FormControl } from '@angular/forms';\nimport { Injectable } from '@angular/core';\n\n/**\n * Form Helper\n *\n * @export\n * @class FormHelperService\n */\n@Injectable({providedIn: 'root'})\nexport class FormHelperService {\n\n  /**\n   * Validate a field in formGroup\n   *\n   * @param {FormGroup} form FormGroup instance\n   * @param {string} field Field to validate\n   * @returns\n   * @memberof FormHelperService\n   */\n  public isFieldValid(form: FormGroup, field: any) {\n    return !form.get(field).valid && form.get(field).touched;\n  }\n\n  /**\n   * Validate form for each item in formGroup\n   *\n   * @param {FormGroup} form FormGroup instance\n   * @memberof FormHelperService\n   */\n  public validateAllFormFields(form: FormGroup) {\n    Object.keys(form.controls).forEach(field => {\n      const control = form.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  /**\n   * Validator for password match\n   *\n   * @private\n   * @param {FormGroup} form FormGroup instance\n   * @returns {*}\n   * @memberof SettingProfilePasswordComponent\n   */\n  public passwordMatchValidator(form: FormGroup): any {\n    if (form) {\n      if (form.get('password').value !== form.get('repeatPassword').value) {\n        return { notMatching: true };\n      }\n    }\n    return null;\n  }\n}\n","import { Injectable } from '@angular/core';\ndeclare var $: any;\n\n@Injectable({ providedIn: 'root' })\nexport class ToasterService {\n  constructor() {}\n\n  error = (error?: string) => {\n    if (!error) {\n      error = 'Une erreur s\\'est produite pendant le traitement';\n    }\n    this.showNotification(error, 'danger');\n  };\n  success = (success?: string) => {\n    if (!success) {\n      success = 'Traitement réussi avec succès';\n    }\n    this.showNotification(success, 'success');\n  };\n  warning(warn: string) {\n    this.showNotification(warn, 'warning');\n  }\n  info(info: string) {\n    this.showNotification(info, 'info');\n  }\n\n  showNotification(message, type?, from?, align?) {\n    if (!type) {\n      type = 'info';\n    }\n    if (!from) {\n      from = 'top';\n    }\n    if (!align) {\n      align = 'right';\n    }\n    $.notify(\n      {\n        icon: 'notifications',\n        message: message\n      },\n      {\n        type: type,\n        timer: 1500,\n        z_index: 30000,\n        placement: {\n          from: from,\n          align: align\n        }\n      }\n    );\n  }\n}\n"]}