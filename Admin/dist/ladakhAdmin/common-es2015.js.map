{"version":3,"sources":["./src/app/shared/models/article.model.ts","./src/app/shared/models/categorie.model.ts","./src/app/shared/services/article.service.ts","./src/app/shared/services/categorie.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyC;AACC;AAGnC,MAAM,OAAQ,SAAQ,qDAAS;IASpC,YAAY,GAAS;QACnB,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,GAAG,EAAE;YACP,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;gBACrB,IAAI,GAAG,KAAK,QAAQ,EAAE;oBACpB,IAAI,CAAC,MAAM,GAAG,IAAI,sDAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACvC;qBAAM,IAAI,GAAG,KAAK,QAAQ,EAAE;oBAC3B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,sDAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnD;qBAAM,IAAI,GAAG,KAAK,WAAW,EAAE;oBAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,sDAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBAC7C;qBAAM,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;oBACzD,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;iBACtB;aACF;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAyC;AACC;AAEnC,MAAM,SAAU,SAAQ,qDAAS;IAKtC,YAAY,GAAS;QACnB,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,GAAG,EAAE;YACP,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;gBACrB,IAAI,GAAG,KAAK,OAAO,EAAE;oBACnB,IAAI,CAAC,KAAK,GAAG,IAAI,sDAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACrC;qBAAM,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;oBACzD,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;iBACtB;aACF;SACF;IACH,CAAC;CACF;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;AAGO;;;AAK7C,MAAM,cAAe,SAAQ,yDAAoB;IACtD,YAAsB,YAAyB;QAC7C,KAAK,CAAC,YAAY,EAAE,iEAAO,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;QADhC,iBAAY,GAAZ,YAAY,CAAa;IAE/C,CAAC;;4EAHU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;AACS;;;AAO/C,MAAM,gBAAiB,SAAQ,yDAAsB;IAC1D,YAAsB,YAAyB;QAC7C,KAAK,CAAC,YAAY,EAAE,iEAAS,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;QADrC,iBAAY,GAAZ,YAAY,CAAa;IAE/C,CAAC;;gFAHU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import { BaseModel } from './base.model';\nimport { Fichier } from './fichier.model';\nimport { Categorie } from './categorie.model';\n\nexport class Article extends BaseModel {\n  title: string;\n  content: string;\n  slug: string;\n  thumbnail: Fichier;\n  banner: Fichier;\n  images: Fichier[];\n  categories: Categorie[];\n\n  constructor(arg?: any) {\n    super(arg);\n    if (arg) {\n      for (const key in arg) {\n        if (key === 'banner') {\n          this.banner = new Fichier(arg.banner);\n        } else if (key === 'images') {\n          this.images = arg.images.map(i => new Fichier(i));\n        } else if (key === 'thumbnail') {\n          this.thumbnail = new Fichier(arg.thumbnail);\n        } else if (Object.prototype.hasOwnProperty.call(arg, key)) {\n          this[key] = arg[key];\n        }\n      }\n    }\n  }\n}\n","import { BaseModel } from './base.model';\nimport { Fichier } from './fichier.model';\n\nexport class Categorie extends BaseModel {\n  name: string;\n  slug: string;\n  image: Fichier;\n\n  constructor(arg?: any) {\n    super(arg);\n    if (arg) {\n      for (const key in arg) {\n        if (key === 'image') {\n          this.image = new Fichier(arg.image);\n        } else if (Object.prototype.hasOwnProperty.call(arg, key)) {\n          this[key] = arg[key];\n        }\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseService } from './base.service';\nimport { HttpService } from '../providers/http.service';\nimport { Observable } from 'rxjs';\nimport { Article } from '@app-models/article.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService extends BaseService<Article> {\n  constructor(protected _httpService: HttpService) {\n    super(_httpService, Article, 'articles', 'article');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseService } from './base.service';\nimport { Categorie } from '../models/categorie.model';\nimport { HttpService } from '../providers/http.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategorieService extends BaseService<Categorie> {\n  constructor(protected _httpService: HttpService) {\n    super(_httpService, Categorie, 'categories', 'category');\n  }\n}\n"],"sourceRoot":"webpack:///"}