<?php

/**
 * Ladakh swagger
 * Documentation for the ladakh platform
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * delete deleteAgenda
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/agenda/{id}', 'AgendaApiImpl@deleteAgenda');
/**
 * get getAgenda
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/agenda/{id}', 'AgendaApiImpl@getAgenda');
/**
 * put updateAgenda
 * Summary: Updates a Agenda by ID
 * Notes: Updates a Agenda by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/agenda/{id}', 'AgendaApiImpl@updateAgenda');
/**
 * get allAgendas
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/agendas', 'AgendaApiImpl@allAgendas');
/**
 * post createAgenda
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/agendas', 'AgendaApiImpl@createAgenda');
/**
 * delete deleteArticle
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/article/{id}', 'ArticleApiImpl@deleteArticle');
/**
 * get getArticle
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/article/{id}', 'ArticleApiImpl@getArticle');
/**
 * put updateArticle
 * Summary: Updates a Article by ID
 * Notes: Updates a Article by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/article/{id}', 'ArticleApiImpl@updateArticle');
/**Â²
 * get allArticles
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/articles', 'ArticleApiImpl@allArticles');
/**
 * post createArticle
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/articles', 'ArticleApiImpl@createArticle');
/**
 * post forgot
 * Summary: Restore access to a forgotten user
 * Notes: Assign new temporary password and send it by email to the user. On a new connection with this temporary password, the temporary is assigned to regular, and temporary is removed.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/forgot', 'AuthenticationApiImpl@forgot');
/**
 * post login
 * Summary: Login a user
 * Notes: Login a user
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/login', 'AuthenticationApiImpl@login');
/**
 * get regenerate
 * Summary: Regenerate the current auth token
 * Notes: Regenerate a new auth token in case of the current token has expired. Check the existance of the user.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/regenerate', 'AuthenticationApiImpl@regenerate');
/**
 * post register
 * Summary: Register a user
 * Notes: Register a user
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/register', 'AuthenticationApiImpl@register');
/**
 * post registerPro
 * Summary: Register a pro user
 * Notes: Register a pro user
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/registerPro', 'AuthenticationApiImpl@registerPro');
/**
 * delete deleteBoption
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/boption/{id}', 'BoptionApiImpl@deleteBoption');
/**
 * get getBoption
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/boption/{id}', 'BoptionApiImpl@getBoption');
/**
 * put updateBoption
 * Summary: Updates a Boption by ID
 * Notes: Updates a Boption by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/boption/{id}', 'BoptionApiImpl@updateBoption');
/**
 * get allBoptions
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/boptions', 'BoptionApiImpl@allBoptions');
/**
 * post createBoption
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/boptions', 'BoptionApiImpl@createBoption');
/**
 * delete deleteBusiness
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/business/{id}', 'BusinessApiImpl@deleteBusiness');
/**
 * get getBusiness
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/business/{id}', 'BusinessApiImpl@getBusiness');
/**
 * put updateBusiness
 * Summary: Updates a Business by ID
 * Notes: Updates a Business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/business/{id}', 'BusinessApiImpl@updateBusiness');
/**
 * post uploadAjaxFileBusiness
 * Summary: Upload a file from ajax
 * Notes: Upload a file from ajax
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/business/{id}/ajaxUpload', 'BusinessApiImpl@uploadAjaxFileBusiness');
/**
 * put approveBusiness
 * Summary: Approve business
 * Notes: Approve business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/business/{id}/approve', 'BusinessApiImpl@approveBusiness');
/**
 * put rejectBusiness
 * Summary: Reject business
 * Notes: Reject business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/business/{id}/reject', 'BusinessApiImpl@rejectBusiness');
/**
 * put updateBusinessStatus
 * Summary: Updates a Business by ID
 * Notes: Updates a Business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/business/{id}/updateStatus', 'BusinessApiImpl@updateBusinessStatus');
/**
 * get statBusiness
 * Summary: business stats
 * Notes: business stats
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessStat', 'BusinessApiImpl@statBusiness');
/**
 * get allBusinesses
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businesses', 'BusinessApiImpl@allBusinesses');
/**
 * post createBusiness
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/businesses', 'BusinessApiImpl@createBusiness');
/**
 * get allBusinessCategories
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessCategories', 'BusinessCategoryApiImpl@allBusinessCategories');
/**
 * post createBusinessCategory
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/businessCategories', 'BusinessCategoryApiImpl@createBusinessCategory');
/**
 * delete deleteBusinessCategory
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/businessCategory/{id}', 'BusinessCategoryApiImpl@deleteBusinessCategory');
/**
 * get getBusinessCategory
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessCategory/{id}', 'BusinessCategoryApiImpl@getBusinessCategory');
/**
 * put updateBusinessCategory
 * Summary: Updates a BusinessCategory by ID
 * Notes: Updates a BusinessCategory by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/businessCategory/{id}', 'BusinessCategoryApiImpl@updateBusinessCategory');
/**
 * delete deleteBusinessRequiredDocument
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/businessRequiredDocument/{id}', 'BusinessRequiredDocumentApiImpl@deleteBusinessRequiredDocument');
/**
 * get getBusinessRequiredDocument
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessRequiredDocument/{id}', 'BusinessRequiredDocumentApiImpl@getBusinessRequiredDocument');
/**
 * put updateBusinessRequiredDocument
 * Summary: Updates a BusinessRequiredDocument by ID
 * Notes: Updates a BusinessRequiredDocument by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/businessRequiredDocument/{id}', 'BusinessRequiredDocumentApiImpl@updateBusinessRequiredDocument');
/**
 * put approveBusinessRequiredDocument
 * Summary: Approve business
 * Notes: Approve business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/businessRequiredDocument/{id}/approve', 'BusinessRequiredDocumentApiImpl@approveBusinessRequiredDocument');
/**
 * put rejectBusinessRequiredDocument
 * Summary: Reject business
 * Notes: Reject business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/businessRequiredDocument/{id}/reject', 'BusinessRequiredDocumentApiImpl@rejectBusinessRequiredDocument');
/**
 * get allBusinessRequiredDocuments
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessRequiredDocuments', 'BusinessRequiredDocumentApiImpl@allBusinessRequiredDocuments');
/**
 * delete deleteBusinessTransfert
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/businessTransfert/{id}', 'BusinessTransfertApiImpl@deleteBusinessTransfert');
/**
 * get getBusinessTransfert
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessTransfert/{id}', 'BusinessTransfertApiImpl@getBusinessTransfert');
/**
 * put updateBusinessTransfert
 * Summary: Updates a BusinessTransfert by ID
 * Notes: Updates a BusinessTransfert by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/businessTransfert/{id}', 'BusinessTransfertApiImpl@updateBusinessTransfert');
/**
 * put approveBusinessTransfert
 * Summary: Approve business
 * Notes: Approve business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/businessTransfert/{id}/approve', 'BusinessTransfertApiImpl@approveBusinessTransfert');
/**
 * put rejectBusinessTransfert
 * Summary: Reject business
 * Notes: Reject business by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/businessTransfert/{id}/reject', 'BusinessTransfertApiImpl@rejectBusinessTransfert');
/**
 * get allBusinessTransfertRequiredDocuments
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessTransfertRequiredDocuments', 'BusinessTransfertApiImpl@allBusinessTransfertRequiredDocuments');
/**
 * get allBusinessTransferts
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/businessTransferts', 'BusinessTransfertApiImpl@allBusinessTransferts');
/**
 * delete deleteCalendar
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/calendar/{id}', 'CalendarApiImpl@deleteCalendar');
/**
 * get getCalendar
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/calendar/{id}', 'CalendarApiImpl@getCalendar');
/**
 * put updateCalendar
 * Summary: Updates a Calendar by ID
 * Notes: Updates a Calendar by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/calendar/{id}', 'CalendarApiImpl@updateCalendar');
/**
 * get allCalendars
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/calendars', 'CalendarApiImpl@allCalendars');
/**
 * post createCalendar
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/calendars', 'CalendarApiImpl@createCalendar');
/**
 * get allCategories
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/categories', 'CategoryApiImpl@allCategories');
/**
 * post createCategory
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/categories', 'CategoryApiImpl@createCategory');
/**
 * delete deleteCategory
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/category/{id}', 'CategoryApiImpl@deleteCategory');
/**
 * get getCategory
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/category/{id}', 'CategoryApiImpl@getCategory');
/**
 * put updateCategory
 * Summary: Updates a Category by ID
 * Notes: Updates a Category by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/category/{id}', 'CategoryApiImpl@updateCategory');
/**
 * get allGalleries
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/galleries', 'GalleryApiImpl@allGalleries');
/**
 * post createGallery
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/galleries', 'GalleryApiImpl@createGallery');
/**
 * delete deleteGallery
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/gallery/{id}', 'GalleryApiImpl@deleteGallery');
/**
 * get getGallery
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/gallery/{id}', 'GalleryApiImpl@getGallery');
/**
 * put updateGallery
 * Summary: Updates a Gallery by ID
 * Notes: Updates a Gallery by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/gallery/{id}', 'GalleryApiImpl@updateGallery');
/**
 * get allgalleryCategories
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/galleryCategories', 'GalleryApiImpl@allgalleryCategories');
/**
 * post uploadGallery
 * Summary: Upload a file
 * Notes: Upload a file
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/uploadGallery', 'GalleryApiImpl@uploadGallery');
/**
 * post reorderListArticle
 * Summary: Reorder List Article.
 * Notes: reorder List Article
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/reorderListArticle', 'ArticleApiImpl@reorderListArticle');
/**
 * get allInformationCenters
 * Summary: Returns a list of information centers.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/misc/informationcenters', 'MiscApiImpl@allInformationCenters');
/**
 * get allNews
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/news', 'NewsApiImpl@allNews');
/**
 * post createNews
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/news', 'NewsApiImpl@createNews');
/**
 * delete deleteNews
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/news/{id}', 'NewsApiImpl@deleteNews');
/**
 * get getNews
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/news/{id}', 'NewsApiImpl@getNews');
/**
 * put updateNews
 * Summary: Updates a News by ID
 * Notes: Updates a News by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/news/{id}', 'NewsApiImpl@updateNews');
/**
 * delete deleteRequiredDocument
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/requiredDocument/{id}', 'RequiredDocumentApiImpl@deleteRequiredDocument');
/**
 * get getRequiredDocument
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/requiredDocument/{id}', 'RequiredDocumentApiImpl@getRequiredDocument');
/**
 * put updateRequiredDocument
 * Summary: Updates a RequiredDocument by ID
 * Notes: Updates a RequiredDocument by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/requiredDocument/{id}', 'RequiredDocumentApiImpl@updateRequiredDocument');
/**
 * get allRequiredDocuments
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/requiredDocuments', 'RequiredDocumentApiImpl@allRequiredDocuments');
/**
 * post createRequiredDocument
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/requiredDocuments', 'RequiredDocumentApiImpl@createRequiredDocument');
/**
 * get allRoadtoladakh
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/roadtoladakh', 'RoadtoladakhApiImpl@allRoadtoladakh');
/**
 * post createRoadtoladakh
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/roadtoladakh', 'RoadtoladakhApiImpl@createRoadtoladakh');
/**
 * delete deleteRoadtoladakh
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/roadtoladakh/{id}', 'RoadtoladakhApiImpl@deleteRoadtoladakh');
/**
 * get getRoadtoladakh
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/roadtoladakh/{id}', 'RoadtoladakhApiImpl@getRoadtoladakh');
/**
 * put updateRoadtoladakh
 * Summary: Updates a Roadtoladakh by ID
 * Notes: Updates a Roadtoladakh by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/roadtoladakh/{id}', 'RoadtoladakhApiImpl@updateRoadtoladakh');
/**
 * delete deleteSlider
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/slider/{id}', 'SliderApiImpl@deleteSlider');
/**
 * get getSlider
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/slider/{id}', 'SliderApiImpl@getSlider');
/**
 * put updateSlider
 * Summary: Updates a Slider by ID
 * Notes: Updates a Slider by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/slider/{id}', 'SliderApiImpl@updateSlider');
/**
 * get allSliders
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/sliders', 'SliderApiImpl@allSliders');
/**
 * post createSlider
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/sliders', 'SliderApiImpl@createSlider');
/**
 * delete deleteStaticPage
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/staticPage/{id}', 'StaticPageApiImpl@deleteStaticPage');
/**
 * get getStaticPage
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/staticPage/{id}', 'StaticPageApiImpl@getStaticPage');
/**
 * put updateStaticPage
 * Summary: Updates a StaticPage by ID
 * Notes: Updates a StaticPage by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/staticPage/{id}', 'StaticPageApiImpl@updateStaticPage');
/**
 * get allStaticPages
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/staticPages', 'StaticPageApiImpl@allStaticPages');
/**
 * post createStaticPage
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/staticPages', 'StaticPageApiImpl@createStaticPage');
/**
 * post uploadAjaxFile
 * Summary: Upload a file from ajax
 * Notes: Upload a file from ajax
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/ajaxUpload', 'UploadApiImpl@uploadAjaxFile');
/**
 * post uploadFile
 * Summary: Upload a file
 * Notes: Upload a file
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/upload', 'UploadApiImpl@uploadFile');
/**
 * post createUser
 * Summary: Creates a user
 * Notes: Creates a user.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/users', 'UsersApiImpl@createUser');
/**
 * get getUsers
 * Summary: Returns a list of users.
 * Notes: Get users corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/users', 'UsersApiImpl@getUsers');
/**
 * delete deleteUser
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/users/{id}', 'UsersApiImpl@deleteUser');
/**
 * get getUser
 * Summary: Gets a user by ID
 * Notes: Gets a user by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/users/{id}', 'UsersApiImpl@getUser');
/**
 * put updateUser
 * Summary: Updates a User by ID
 * Notes: Updates a User by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/users/{id}', 'UsersApiImpl@updateUser');
/**
 * delete deleteVideo
 * Summary: Deletes a user by ID
 * Notes: Deletes a user by ID
 * Output-Formats: [application/json]
 */
$app->delete('/api/v1/video/{id}', 'VideoApiImpl@deleteVideo');
/**
 * get getVideo
 * Summary: Gets a doc by ID
 * Notes: Gets a doc by ID, with all data excepts the password
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/video/{id}', 'VideoApiImpl@getVideo');
/**
 * put updateVideo
 * Summary: Updates a Video by ID
 * Notes: Updates a Video by ID.
 * Output-Formats: [application/json]
 */
$app->put('/api/v1/video/{id}', 'VideoApiImpl@updateVideo');
/**
 * get allVideos
 * Summary: Returns a list of documents.
 * Notes: Get documents corresponding to query.
 * Output-Formats: [application/json]
 */
$app->get('/api/v1/videos', 'VideoApiImpl@allVideos');
/**
 * post createVideo
 * Summary: Creates a document
 * Notes: Creates a document.
 * Output-Formats: [application/json]
 */
$app->post('/api/v1/videos', 'VideoApiImpl@createVideo');

