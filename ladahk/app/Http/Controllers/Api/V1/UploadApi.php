<?php

/**
 * Ladakh swagger
 * Documentation for the ladakh platform
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers\Api\V1;

use Illuminate\Support\Facades\Request;

class UploadApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation uploadAjaxFile
     *
     * Upload a file from ajax.
     *
     *
     * @return Http response
     */
    public function uploadAjaxFile()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $file_data = $input['file_data'];

        $file_id = $input['file_id'];

        $required_document_id = $input['required_document_id'];


        return response('How about implementing uploadAjaxFile as a post method ?');
    }
    /**
     * Operation uploadFile
     *
     * Upload a file.
     *
     *
     * @return Http response
     */
    public function uploadFile()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['file'])) {
            throw new \InvalidArgumentException('Missing the required parameter $file when calling uploadFile');
        }
        $file = $input['file'];

        if (!isset($input['name'])) {
            throw new \InvalidArgumentException('Missing the required parameter $name when calling uploadFile');
        }
        $name = $input['name'];

        if (!isset($input['type'])) {
            throw new \InvalidArgumentException('Missing the required parameter $type when calling uploadFile');
        }
        $type = $input['type'];

        if (!isset($input['path'])) {
            throw new \InvalidArgumentException('Missing the required parameter $path when calling uploadFile');
        }
        $path = $input['path'];

        $max_dim = $input['max_dim'];

        $generate_thumb = $input['generate_thumb'];

        $max_thumb_dim = $input['max_thumb_dim'];


        return response('How about implementing uploadFile as a post method ?');
    }
}
