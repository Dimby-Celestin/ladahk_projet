<?php

/**
 * Ladakh swagger
 * Documentation for the ladakh platform
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers\Api\V1;

use Illuminate\Support\Facades\Request;

class CategoryApi extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation allCategories
     *
     * Returns a list of documents..
     *
     *
     * @return Http response
     */
    public function allCategories()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['limit'])) {
            throw new \InvalidArgumentException('Missing the required parameter $limit when calling allCategories');
        }
        $limit = $input['limit'];

        if (!isset($input['page'])) {
            throw new \InvalidArgumentException('Missing the required parameter $page when calling allCategories');
        }
        $page = $input['page'];

        $sort_field = $input['sort_field'];

        $search_value = $input['search_value'];

        $search_fields = $input['search_fields'];


        return response('How about implementing allCategories as a get method ?');
    }
    /**
     * Operation createCategory
     *
     * Creates a document.
     *
     *
     * @return Http response
     */
    public function createCategory()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $body = $input['body'];


        return response('How about implementing createCategory as a post method ?');
    }
    /**
     * Operation deleteCategory
     *
     * Deletes a user by ID.
     *
     * @param string $id Category ID (required)
     *
     * @return Http response
     */
    public function deleteCategory($id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing deleteCategory as a delete method ?');
    }
    /**
     * Operation getCategory
     *
     * Gets a doc by ID.
     *
     * @param string $id Category ID. (required)
     *
     * @return Http response
     */
    public function getCategory($id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing getCategory as a get method ?');
    }
    /**
     * Operation updateCategory
     *
     * Updates a Category by ID.
     *
     * @param string $id Category ID. If called from the application, can be \&quot;me\&quot;. (required)
     *
     * @return Http response
     */
    public function updateCategory($id)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing updateCategory as a put method ?');
    }
}
